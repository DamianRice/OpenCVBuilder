name: windows-vs2019

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  windows-vs2019:
    runs-on: windows-2019

    env:
      OPENCV_VERSION: 4.8.1
      PKG_NAME: opencv-4.8.1-windows-vs2019

    steps:
      # Setup JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      # 检出代码
      - uses: actions/checkout@v3

      # 检出opencv
      - name: checkout opencv
        uses: actions/checkout@v3
        with:
          repository: opencv/opencv
          path: opencv-${{ env.OPENCV_VERSION }}
          ref: ${{ env.OPENCV_VERSION }}
          submodules: recursive

      # 复制编译脚本
      - name: copy build script
        run: |
          cp build-opencv4-vs2019.bat opencv-${{ env.OPENCV_VERSION }}
          cp opencv4_cmake_options.txt opencv-${{ env.OPENCV_VERSION }}

      # 编译opencv for windows
      # https://github.com/ilammy/msvc-dev-cmd
      #- uses: ilammy/msvc-dev-cmd@v1
      - name: build opencv
        run: |
          cd opencv-${{ env.OPENCV_VERSION }}
          ./build-opencv4-vs2019.bat

      # install文件夹改名，并使用7z压缩
      - name: 7z-md
        run: |
          mv opencv-${{ env.OPENCV_VERSION }}/build-v142-x64-md/install windows-x64
          mv opencv-${{ env.OPENCV_VERSION }}/build-v142-Win32-md/install windows-x86
          7z a ${{ env.PKG_NAME }}-md.7z windows-x64 windows-x86
          rm windows-x64 -r -fo
          rm windows-x86 -r -fo

      # 上传artifact
      - name: upload-md
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PKG_NAME }}-md
          path: |
            ${{ env.PKG_NAME }}-md.7z

      # install文件夹改名，并使用7z压缩
      - name: 7z-mt
        run: |
          mv opencv-${{ env.OPENCV_VERSION }}/build-v142-x64-mt/install windows-x64
          mv opencv-${{ env.OPENCV_VERSION }}/build-v142-Win32-mt/install windows-x86
          7z a ${{ env.PKG_NAME }}-mt.7z windows-x64 windows-x86
          rm windows-x64 -r -fo
          rm windows-x86 -r -fo

      # 上传artifact
      - name: upload-mt
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PKG_NAME }}-mt
          path: |
            ${{ env.PKG_NAME }}-mt.7z

  release:
    needs: [ windows-vs2019 ]

    runs-on: ubuntu-latest

    env:
      PKG_NAME: opencv-4.8.1-windows-vs2019

    steps:
      # 检出代码
      - uses: actions/checkout@v3

      # 获取所有的git log和tag
      - name: Unshallow
        run: git fetch --prune --unshallow

      # 获取git log 从 previousTag 到 lastTag
      - name: Get git log
        id: git-log
        run: |
          previousTag=$(git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1`)
          lastTag=$(git describe --abbrev=0 --tags)
          echo "previousTag:$previousTag ~ lastTag:$lastTag"
          log=$(git log $previousTag..$lastTag --pretty=format:'- %cd %an: %s\n' --date=format:'%Y-%m-%d %H:%M:%S')
          echo "$log"
          echo "log_state="$log"" >> $GITHUB_ENV

      # 创建Changelog文件 triggered by git tag push
      - name: Generate Changelog
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo -e '${{ env.log_state }}' > release.md

      # 下载artifact
      - name: download
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      # 查看artifact
      - name: list artifact
        run: |
          tree artifacts

      # 创建release 上传release
      # https://github.com/marketplace/actions/create-release
      - name: upload-windows-vs2019-md and upload-windows-vs2019-mt
        uses: ncipollo/release-action@v1
        with:
          prerelease: false
          name: opencv-lite ${{ github.ref }}
          bodyFile: release.md
          artifacts: artifacts/${{ env.PKG_NAME }}-md/${{ env.PKG_NAME }}-md.7z,artifacts/${{ env.PKG_NAME }}-mt/${{ env.PKG_NAME }}-mt.7z
          allowUpdates: true
          artifactContentType: application/x-7z-compressed
          token: ${{ secrets.GITHUB_TOKEN }}
